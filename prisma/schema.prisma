// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id            String         @id @default(cuid())
  name          String
  email         String         @unique
  password      String
  role          UserRole       @default(USER)
  phone         String?
  address       String?
  bio           String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  bookings      Booking[]
  consultations Consultation[]

  @@index([email])
}

model Service {
  id          String    @id @default(cuid())
  name        String
  description String
  price       Float
  duration    Int       // in minutes
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  bookings    Booking[]
}

model Booking {
  id        String   @id @default(cuid())
  userId    String
  serviceId String
  date      DateTime
  time      String   // Add this field to store the time of the booking
  status    String   @default("pending") // pending, confirmed, completed, cancelled
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id])
  service   Service  @relation(fields: [serviceId], references: [id])

  @@index([userId])
  @@index([serviceId])
}

model Consultation {
  id        String   @id @default(cuid())
  userId    String
  date      DateTime
  isFree    Boolean  @default(true)
  status    String   @default("pending") // pending, confirmed, completed, cancelled
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Contact {
  id           String   @id @default(cuid())
  name         String
  organization String?
  email        String
  website      String?
  message      String
  services     String[]
  status       String   @default("pending") // "pending", "contacted", "converted", "lost"
  createdAt    DateTime @default(now())

  @@index([email])
}

model OTP {
  id        String   @id @default(cuid())
  email     String
  otp       String
  expiresAt DateTime
  used      Boolean  @default(false)
  action    String  
  createdAt DateTime @default(now())

  @@index([email, otp])
}
